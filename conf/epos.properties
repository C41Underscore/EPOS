### Dataset ###
#The folder name in the datasets path. Make sure it has no spaces, tabs or newlines (alphanum and underscore preferred)
dataset=gaussian


### Basic epos properties ###
# any integer > 0
numSimulations=5

# any integer > 0
numIterations=40

# any integer > 0
numAgents=100

# any integer > 0
numPlans=10

# any integer > 0
numChildren=2

# exact dimensionality from the dataset
planDim=100


### Shuffle seeds ###

# initial agent structure before reorganization occurs, any integer > 0
shuffle=0

# path to a file containing permutation of indices, need its strucure: sphinx one column: integer index in each row
shuffle_file="permutation.csv" 


### Multi-objective Cost Weights ###
# Number of supported objectives: 3
# Efficiency objective: 1-alpha-beta
# Fairness objective: alpha
# Discomfort objective: beta
# (1-alpha-beta)*inefficiency + alpha*unfairness + beta*discomfort
# "alpha,beta", e.g. "0.3,0.7" for alpha=0.3 and beta=0.7
# this needs to be removed actually
numberOfWeights = 2 
# Weights are in string format, separated by ","  
weightsString = "0.0,0.0"

# Values: "same", "different". 
behaviours=same
#filepath
agentsBehavioursPath=default

# SET soft or hard constraint for agents
# SOFT: soft constraints, agents select plan following the global cost function
# HARD_PLANS: hard constraints for the agents' plans, should input a file "hard_constraints_plans.csv",
#       which needs two rows (=planDim), one denotes the values of hard constraints for plans, the other denotes the decision for plans. Set 4 rows when have two bounds (upper and lower)
# HARD_COSTS: hard constraints for the agents' cost, should input a file "hard_constraints_costs.csv",
#       which needs the values of hard constraint and the decisions for local cost, global cost and global complex cost.
# Decisions (0: ignore, 1: no larger than, 2: no less than, 3: equal)
# Values: "SOFT", "HARD_PLANS", "HARD_COSTS"
constraint="SOFT"
# filepath
constraintPlansPath=default
constraintCostsPath=default


### Reorganization strategy ###

# possible values: periodically, convergence, globalCostReduction, never. never_strategy: never does reorganization
strategy=never

# any integer > 0, if "periodically" strategy is chosen
periodically.reorganizationPeriod=3

# any positive integer (>0), if "convergence" strategy is chosen, the iteration at which the selections will be memorized to be sued after the following reorganization
convergence.memorizationOffset=5

# double from [0, 1]
globalCost.reductionThreshold=0.5

# any integer. Keep the same seed to reproduce experiment results, what random permutations each strategy will explore, result reproducability
strategy.reorganizationSeed=0



#sphinx
#vector target for global response same dimensionality as plan
#filepath
goalSignalPath=default

# Values: "VAR", "RSS", "XCORR", "RMSE"
# Goal signal is ignored in funcitons with only global response as input, e.g. var
globalCostFunction=VAR

# Values: "STD", "UNIT-LENGTH", "MIN-MAX" ( only for RSS). 
scaling="MIN-MAX"

# Values: "INDEX", "DISC", "PREF"
localCostFunction="INDEX"  


### Loggers ###
logger.GlobalCostLogger = true
logger.LocalCostMultiObjectiveLogger = true
logger.TerminationLogger = true
logger.SelectedPlanLogger = true
logger.GlobalResponseVectorLogger = true
logger.PlanFrequencyLogger = true
logger.UnfairnessLogger = true
logger.GlobalComplexCostLogger = true
logger.WeightsLogger = true
logger.ReorganizationLogger = true
logger.VisualizerLogger = true
logger.HardConstraintLogger = true


#Code related logger for debugging and checks
# please check here https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html. For experiments "SEVERE" is preferred 
logLevel="SEVERE"
